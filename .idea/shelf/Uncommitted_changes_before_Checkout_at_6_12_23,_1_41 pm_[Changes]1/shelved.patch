Index: app/src/main/java/com/example/pandacapstone/FoodPlaylistScreen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.pandacapstone\n\nimport androidx.annotation.StringRes\nimport androidx.compose.foundation.Image\nimport androidx.compose.foundation.layout.Box\nimport androidx.compose.foundation.layout.Column\nimport androidx.compose.foundation.layout.Row\nimport androidx.compose.foundation.layout.fillMaxHeight\nimport androidx.compose.foundation.layout.fillMaxSize\nimport androidx.compose.foundation.layout.fillMaxWidth\nimport androidx.compose.foundation.layout.padding\nimport androidx.compose.foundation.layout.width\nimport androidx.compose.material.icons.Icons\nimport androidx.compose.material.icons.filled.ArrowBack\nimport androidx.compose.material.icons.filled.Check\nimport androidx.compose.material.icons.filled.Close\nimport androidx.compose.material3.ExperimentalMaterial3Api\nimport androidx.compose.material3.Icon\nimport androidx.compose.material3.IconButton\nimport androidx.compose.material3.Text\nimport androidx.compose.material3.TopAppBar\nimport androidx.compose.material3.TopAppBarDefaults\nimport androidx.compose.runtime.Composable\nimport androidx.compose.runtime.getValue\nimport androidx.compose.ui.Alignment\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.graphics.Color\nimport androidx.compose.ui.graphics.painter.Painter\nimport androidx.compose.ui.platform.LocalContext\nimport androidx.compose.ui.res.colorResource\nimport androidx.compose.ui.res.painterResource\nimport androidx.compose.ui.res.stringResource\nimport androidx.compose.ui.text.TextStyle\nimport androidx.compose.ui.text.font.FontWeight\nimport androidx.compose.ui.unit.dp\nimport androidx.compose.ui.unit.sp\nimport androidx.navigation.NavHostController\nimport androidx.navigation.compose.NavHost\nimport androidx.navigation.compose.composable\nimport androidx.navigation.compose.currentBackStackEntryAsState\nimport androidx.navigation.compose.rememberNavController\nimport com.maryamrzdh.stepper.Stepper\n\n// enum values that represent the screens in the app\nenum class FoodPlaylistScreen(@StringRes val title: Int) {\n    Home(title = R.string.home),\n    Start(title = R.string.playlist_intro),\n    DietPreference(title = R.string.diet_preference),\n    FoodPreference(title = R.string.food_preference),\n    FreqTimePreference(title = R.string.freq_time_preference),\n    Customisation(title = R.string.customisation_preference)\n}\n\n@Composable\n@OptIn(ExperimentalMaterial3Api::class)\nfun AppBar(\n    canNavigateBack: Boolean,\n    navigateUp: () -> Unit,\n    onNextButtonClicked: () -> Unit,\n    currentScreen: FoodPlaylistScreen\n) {\n    val ctx = LocalContext.current\n\n    TopAppBar(\n        colors = TopAppBarDefaults.smallTopAppBarColors(containerColor = Color.White),\n        title = { },\n        navigationIcon = {\n            if (canNavigateBack && currentScreen != FoodPlaylistScreen.Start) {\n                IconButton(onClick = navigateUp) {\n                    Icon(\n                        imageVector = Icons.Filled.ArrowBack,\n                        contentDescription = \"Back\",\n                        tint = colorResource(id = R.color.party_pink),\n                        modifier = Modifier.fillMaxSize()\n                    )\n                }\n            }\n        },\n        actions = {\n            if (currentScreen == FoodPlaylistScreen.FoodPreference || currentScreen == FoodPlaylistScreen.FreqTimePreference) {\n                IconButton(onClick = onNextButtonClicked) {\n                    Icon(\n                        imageVector = Icons.Default.Check,\n                        contentDescription = \"Select\",\n                        tint = colorResource(id = R.color.party_pink),\n                        modifier = Modifier.fillMaxSize()\n                    )\n                }\n            }\n            if (currentScreen == FoodPlaylistScreen.Start) {\n                IconButton(onClick = navigateUp) {\n                    Icon(imageVector = Icons.Default.Close, contentDescription = \"Close\")\n                }\n            }\n        },\n    )\n}\n\n@Composable\nfun FoodPlaylistApp(\n    navController: NavHostController = rememberNavController()\n) {\n    val backStackEntry by navController.currentBackStackEntryAsState()\n    val currentScreen = FoodPlaylistScreen.valueOf(\n        backStackEntry?.destination?.route ?: FoodPlaylistScreen.DietPreference.name\n    )\n\n    Column {\n        AppBar(\n            canNavigateBack = navController.previousBackStackEntry != null,\n            navigateUp = { navController.navigateUp() },\n            onNextButtonClicked = {\n                if (currentScreen == FoodPlaylistScreen.Home) {\n                    navController.navigate(FoodPlaylistScreen.DietPreference.name)\n                } else if (currentScreen == FoodPlaylistScreen.DietPreference) {\n                    navController.navigate(FoodPlaylistScreen.FoodPreference.name)\n                } else if (currentScreen == FoodPlaylistScreen.FoodPreference) {\n                    navController.navigate(FoodPlaylistScreen.FreqTimePreference.name)\n                } else if (currentScreen == FoodPlaylistScreen.FreqTimePreference) {\n                    navController.navigate(FoodPlaylistScreen.Customisation.name)\n                }\n            },\n            currentScreen = currentScreen\n        )\n        Column(\n            modifier = if (currentScreen == FoodPlaylistScreen.Start) Modifier\n                .padding(0.dp, 0.dp)\n                .fillMaxHeight()\n            else Modifier\n                .padding(16.dp, 0.dp, 16.dp, 16.dp)\n        ) {\n            when (currentScreen) {\n                FoodPlaylistScreen.DietPreference -> {\n                    Header(\n                        stringResource(id = R.string.diet_header),\n                        painterResource(id = R.drawable.pau_pondering)\n                    )\n                    Step(1)\n                }\n\n                FoodPlaylistScreen.FoodPreference -> {\n                    Header(\n                        stringResource(id = R.string.food_header),\n                        painterResource(id = R.drawable.pau_yummy)\n                    )\n                    Step(2)\n                }\n\n                FoodPlaylistScreen.FreqTimePreference -> {\n                    Header(\n                        stringResource(id = R.string.freqtime_header),\n                        painterResource(id = R.drawable.pau_happy)\n                    )\n                    Step(3)\n                }\n\n                FoodPlaylistScreen.Customisation -> {\n                    Header(\n                        stringResource(id = R.string.customisation_header),\n                        painterResource(id = R.drawable.pau_okay)\n                    )\n                    Step(4)\n                }\n\n                else -> null\n            }\n\n            NavHost(\n                navController = navController,\n                startDestination = FoodPlaylistScreen.Home.name,\n            ) {\n                composable(route = FoodPlaylistScreen.Home.name) {\n                    HomeScreen(onNextButtonClicked = {\n                        navController.navigate(\n                            FoodPlaylistScreen.Start.name\n                        )\n                    })\n                }\n                composable(route = FoodPlaylistScreen.Start.name) {\n                    PlaylistIntro(onNextButtonClicked = {\n                        navController.navigate(\n                            FoodPlaylistScreen.DietPreference.name\n                        )\n                    })\n                }\n                composable(route = FoodPlaylistScreen.DietPreference.name) {\n                    DietPreferenceScreen(onNextButtonClicked = {\n                        navController.navigate(\n                            FoodPlaylistScreen.FoodPreference.name\n                        )\n                    })\n                }\n                composable(route = FoodPlaylistScreen.FoodPreference.name) {\n                    FoodPreferenceScreen()\n                }\n                composable(route = FoodPlaylistScreen.FreqTimePreference.name) {\n                    FreqTimePreferenceScreen()\n                }\n                composable(route = FoodPlaylistScreen.Customisation.name) {\n                    CustomisationScreen()\n                }\n            }\n        }\n    }\n}\n\n@Composable\nfun Step(currentStep: Int) {\n    val numberStep = 4\n    // var currentStep by rememberSaveable { mutableStateOf(1) }\n    val titleList = arrayListOf(\"Step 1\", \"Step 2\", \"Step 3\", \"Step 4\")\n\n    Column(modifier = Modifier.padding(bottom = 20.dp)) {\n        Stepper(\n            numberOfSteps = numberStep,\n            currentStep = currentStep,\n            stepDescriptionList = titleList,\n        )\n    }\n}\n\n@Composable\nfun Header(headerStr: String, pauImg: Painter) {\n    Row() {\n        Text(\n            text = headerStr,\n            style = TextStyle(\n                fontWeight = FontWeight.Bold, fontSize = 26.sp\n            ),\n            modifier = Modifier\n                .padding(bottom = 20.dp, top = 20.dp)\n                .align(Alignment.CenterVertically)\n                .width(270.dp)\n        )\n        Box(modifier = Modifier.fillMaxWidth()) {\n            Image(\n                painter = pauImg,\n                contentDescription = \"Pau Pau\",\n            )\n        }\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/pandacapstone/FoodPlaylistScreen.kt b/app/src/main/java/com/example/pandacapstone/FoodPlaylistScreen.kt
--- a/app/src/main/java/com/example/pandacapstone/FoodPlaylistScreen.kt	
+++ b/app/src/main/java/com/example/pandacapstone/FoodPlaylistScreen.kt	
@@ -167,7 +167,8 @@
 
             NavHost(
                 navController = navController,
-                startDestination = FoodPlaylistScreen.Home.name,
+                // here to change the starting screen
+                startDestination = FoodPlaylistScreen.FreqTimePreference.name,
             ) {
                 composable(route = FoodPlaylistScreen.Home.name) {
                     HomeScreen(onNextButtonClicked = {
Index: .idea/modules/app/PandaCapstone.app.iml
===================================================================
diff --git a/.idea/modules/app/PandaCapstone.app.iml b/.idea/modules/app/PandaCapstone.app.iml
deleted file mode 100644
--- a/.idea/modules/app/PandaCapstone.app.iml	
+++ /dev/null	
@@ -1,8 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<module version="4">
-  <component name="ModuleClassLoaderOverlays">
-    <paths>
-      <option value="/var/folders/f8/53_qpmzn7_bfcy_7tb3wfz2xs0md_y/T/overlay7318363548498134202" />
-    </paths>
-  </component>
-</module>
\ No newline at end of file
